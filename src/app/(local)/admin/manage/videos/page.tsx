"use client";

import Link from "next/link";
import { useState } from "react";
import { useRouter } from "next/navigation";

interface Video {
	id: string;
	title: string;
	reward: number;
	status: "Published" | "Draft";
	createdAt: string;
}

const initialVideos: Video[] = [
	{
		id: "vid001",
		title: "‡¶Ü‡ßü‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
		reward: 5,
		status: "Published",
		createdAt: "2025-07-29",
	},
	{
		id: "vid002",
		title: "‡¶¶‡ßç‡¶¨‡¶ø‡¶§‡ßÄ‡ßü ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì - ‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶™‡¶® ‡¶¶‡ßá‡¶ñ‡¶æ",
		reward: 3,
		status: "Draft",
		createdAt: "2025-07-30",
	},
	{
		id: "vid003",
		title: "‡¶≠‡¶¨‡¶ø‡¶∑‡ßç‡¶Ø‡¶§‡ßá‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
		reward: 4,
		status: "Published",
		createdAt: "2025-07-31",
	},
];

export default function AdminVideosPage() {
	const [videos, setVideos] = useState<Video[]>(initialVideos);
	const router = useRouter();

	const handleDelete = (id: string) => {
		const confirmDelete = confirm("‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡¶ø ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§‡¶≠‡¶æ‡¶¨‡ßá ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶ï‡¶∞‡¶§‡ßá ‡¶ö‡¶æ‡¶®?");
		if (!confirmDelete) return;

		const updated = videos.filter(video => video.id !== id);
		setVideos(updated);
	};

	const handleEdit = (id: string) => {
		router.push(`/admin/manage/videos/edit/${id}`);
	};

	return (
		<div className="p-6 space-y-6">
			<div className="flex items-center justify-between flex-wrap gap-2">
				<h1 className="text-2xl font-bold">üé• ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶ú‡¶Æ‡ßá‡¶®‡ßç‡¶ü</h1>
				<Link href="/admin/manage/videos/create">
					<button className="bg-gradient-to-r from-blue-500 to-indigo-600 text-white px-4 py-2 rounded shadow hover:opacity-90 text-sm">
						‚ûï ‡¶®‡¶§‡ßÅ‡¶® ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
					</button>
				</Link>
			</div>

			<div className="overflow-x-auto rounded-xl border border-gray-300 p-4 shadow-sm bg-white">
				{videos.length === 0 ? (
					<p className="text-gray-500">‡¶ï‡ßã‡¶®‡ßã ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§</p>
				) : (
					<table className="min-w-full text-sm text-left border-collapse">
						<thead>
							<tr className="bg-gray-100 text-gray-700">
								<th className="px-4 py-2 border border-gray-400">‡¶∂‡¶ø‡¶∞‡ßã‡¶®‡¶æ‡¶Æ</th>
								<th className="px-4 py-2 border border-gray-400">‡¶∞‡¶ø‡¶ì‡ßü‡¶æ‡¶∞‡ßç‡¶° (‡ß≥)</th>
								<th className="px-4 py-2 border border-gray-400">‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏</th>
								<th className="px-4 py-2 border border-gray-400">‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ</th>
								<th className="px-4 py-2 border border-gray-400">‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡¶∂‡¶®</th>
							</tr>
						</thead>
						<tbody>
							{videos.map(video => (
								<tr key={video.id} className="hover:bg-gray-50">
									<td className="px-4 py-2 border border-gray-400">{video.title}</td>
									<td className="px-4 py-2 border border-gray-400">{video.reward}</td>
									<td className="px-4 py-2 border border-gray-400">
										<span
											className={`px-2 py-1 rounded text-xs font-medium ${
												video.status === "Published"
													? "bg-green-100 text-green-700"
													: "bg-yellow-100 text-yellow-700"
											}`}>
											{video.status}
										</span>
									</td>
									<td className="px-4 py-2 border border-gray-400">{video.createdAt}</td>
									<td className="px-4 py-2 border border-gray-400">
										<div className="flex gap-3">
											<button
												onClick={() => handleEdit(video.id)}
												className="text-indigo-600 hover:underline text-xs font-semibold">
												‚úèÔ∏è Edit
											</button>
											<button
												onClick={() => handleDelete(video.id)}
												className="text-red-600 hover:underline text-xs font-semibold">
												üóëÔ∏è Delete
											</button>
										</div>
									</td>
								</tr>
							))}
						</tbody>
					</table>
				)}
			</div>
		</div>
	);
}
